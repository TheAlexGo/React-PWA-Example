{
    "env": {
        "browser": true,
        "es2021": true,
        "node": true
    },

    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:react/jsx-runtime",
        "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "@typescript-eslint",
        "prettier"
    ],
    "settings": {
        "import/resolver": {
            "node": {
                "extensions": [".js", ".jsx", ".ts", ".tsx"],
                "moduleDirectory": ["node_modules", "src/"]
            }
        }
    },
    "globals": {
        "React": true,
        "JSX": true
    },
    "rules": {
        // Включаем prettire
        "prettier/prettier": "error",
        // Разрешаем не дефолтный экспорт
        "import/prefer-default-export": 0,
        // Разрешаем иморт расширений
        "import/extensions": 0,
        // не требуем использовать только camelCase в  названиях переменных
        "camelcase": 0,
        // разрешаем использовать любые конструкции
        "no-restricted-syntax": 0,
        // Разрешаем функции возвращать неконсистентные данные
        "consistent-return": 0,
        // Явно указываем, какие файлы могут использовать JSX
        "react/jsx-filename-extension": [
            2,
            {
                "extensions": [".js", ".jsx", ".ts", ".tsx"]
            }
        ],
        // Разрешаем использовать разные определния для компонентов
        "react/function-component-definition": [
            2,
            {
                "namedComponents": "arrow-function",
                "unnamedComponents": "arrow-function"
            }
        ],
        // Разрешаем применять spread к пропсам
        "react/jsx-props-no-spreading": ["error", {
            "html": "ignore",
            "custom": "ignore",
            "exceptions": [""]
        }],
        // Отключаем стандартную проверку неиспользуемых переменных
        "no-unused-vars": 0,
        // Включаем проверку неиспоьзуемых переменных плагином ts
        "@typescript-eslint/no-unused-vars": [
            "error"
        ],
        // Отключаем стандартную проверку на уже объявленные переменные в скопе
        "no-shadow": 0,
        // Включаем проверку на уже объявленные переменные в скопе плагином ts
        "@typescript-eslint/no-shadow": [
            "error"
        ],
        // Разрешаем создавать методы класса без использования в них this
        "class-methods-use-this": 0,
        "react/jsx-uses-react": "error",
        "react/jsx-uses-vars": "error",
        "import/no-anonymous-default-export": "off"
    },
    "overrides": [
        {
            "files": [
                "**/*.stories.*"
            ]
        }
    ]
}
